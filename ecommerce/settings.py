"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import dj_database_url
import environs
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


AUTH_USER_MODEL = 'shop.MyUser'
ALLOWED_HOSTS = ['my-ecommerce-production.up.railway.app' ,'127.0.0.1']
# Application definition

INSTALLED_APPS = [
    'shop',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    "django.contrib.sites",
     # 3rd party
    "allauth", # new
    "allauth.account", # new
    "allauth.socialaccount", # new
    # social providers
    "allauth.socialaccount.providers.github", 
    "allauth.socialaccount.providers.twitter",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.facebook", 
  
  
  
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':[],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'
env=environs.Env()
environs.Env.read_env()

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


DATABASES = {
    'default': {
         #'ENGINE': 'django.db.backends.sqlite3',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'railway',
        'USER': 'postgres',
        'PASSWORD': 'p5cZkKsPA965WyF2hccI',
        'HOST': 'containers-us-west-67.railway.app',
        'PORT': '6468',
    }
}

"""
DATABASES = {
    'default':dj_database_url.parse(env('DATABASE_URL'))
 
}

#Full database set-up
""" 'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': 'dutmiaaz',
    'USER': 'dutmiaaz',
    'PASSWORD': '7nSEF5lUa0fmbprzJzhIALB_fjBZpvf9',
    'HOST': 'silly.db.elephantsql.com',
    'PORT': 5432
  }"""
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

MEDIA_ROOT=os.path.join(BASE_DIR, 'uploads')
MEDIA_URL='/files/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_ROOT=os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIR=[
    os.path.join(BASE_DIR, 'static')
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field


email_host= 'smtp.risinghopegirlseducation.com'
email_port =465
email_use_ssl = True
email_host_user ='admin@risinghopegirlseducation.com'
email_host_password = 'myadmin_1234'

# To email: contact form
recipient_address='kunlefes089@gmail.com'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST =  os.environ.get('EMAIL_HOST')
EMAIL_PORT =os.environ.get('EMAIL_PORT')
EMAIL_USE_SSL = os.environ.get('EMAIL_USE_SSL')
EMAIL_HOST_USER =os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD =os.environ.get('EMAIL_HOST_PASSWORD')

# To email: contact form
RECIPIENT_ADDRESS=os.environ.get('RECIPIENT_ADDRESS')

CORS_ALLOWED_ORIGINS = [
        'https://my-ecommerce-production.up.railway.app',
        "http://localhost:8000"
        
    ]

CSRF_TRUSTED_ORIGINS = ['https://my-ecommerce-production.up.railway.app']
CORS_ALLOW_CREDENTIALS=True

if DEBUG:
    STRIPE_SECRET_KEY=os.environ.get('STRIPE_SECRET_KEY')
    STRIPE_PUBLISHABLE_KEY=os.environ.get('STRIPE_PUBLISHABLE_KEY')


AUTHENTICATION_BACKENDS = (
   
   'django.contrib.auth.backends.ModelBackend',
   "allauth.account.auth_backends.AuthenticationBackend",
    #'shop.MyUser'
)


SITE_ID =1
ACCOUNT_EMAIL_VERIFICATION = "none"
LOGIN_REDIRECT_URL = "home"
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"
ACCOUNT_UNIQUE_EMAIL = True

#SOCIAL_AUTH_URL_NAMESPACE = 'social'

#AUTHORIZE_REDIRECT_URLS=(
#'http://localhost:8000/complete/google-oauth2/',
#https://project-domain.com/complete/google-oauth2/
#)

#S3 bucket
AWS_QUERYSTRING_AUTH=False
DEFAULT_FILE_STORAGE = os.environ.get('DEFAULT_FILE_STORAGE')
AWS_ACCESS_KEY_ID=os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY=os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME=os.environ.get('AWS_STORAGE_BUCKET_NAME')